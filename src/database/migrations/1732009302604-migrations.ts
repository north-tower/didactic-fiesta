import { MigrationInterface, QueryRunner } from "typeorm";

export class Migrations1732009302604 implements MigrationInterface {
    name = 'Migrations1732009302604'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`media_variants\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`mediaId\` varchar(255) NOT NULL, \`size\` enum ('THUMBNAIL', 'SMALL', 'MEDIUM', 'LARGE', 'ORIGINAL') NOT NULL, \`url\` varchar(255) NOT NULL, \`fileSize\` bigint NOT NULL, \`dimensions\` json NOT NULL, \`metadata\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`media_folders\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, \`description\` varchar(255) NULL, \`parentId\` varchar(255) NULL, \`sortOrder\` int NOT NULL DEFAULT '0', \`metadata\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`media\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`filename\` varchar(255) NOT NULL, \`originalName\` varchar(255) NOT NULL, \`mimeType\` varchar(255) NOT NULL, \`size\` bigint NOT NULL, \`type\` enum ('IMAGE', 'VIDEO', 'DOCUMENT', 'AUDIO') NOT NULL, \`purpose\` enum ('PRODUCT', 'PROFILE', 'COMPANY', 'CATEGORY', 'PRODUCT_MAIN', 'PRODUCT_GALLERY', 'COMPANY_LOGO', 'COMPANY_BANNER', 'USER_AVATAR', 'CATEGORY_THUMBNAIL', 'SELLER_LOGO', 'SELLER_BANNER') NOT NULL, \`entityId\` varchar(255) NOT NULL, \`entityType\` varchar(255) NOT NULL, \`sortOrder\` int NOT NULL DEFAULT '0', \`folderId\` varchar(255) NULL, \`metadata\` json NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payroll_settings\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`companyId\` varchar(255) NOT NULL, \`maxDeductionPercentage\` decimal(5,2) NOT NULL, \`maxInstallments\` int NOT NULL, \`deductionFrequency\` enum ('MONTHLY', 'BI_WEEKLY', 'WEEKLY') NOT NULL DEFAULT 'MONTHLY', \`minimumSalary\` decimal(10,2) NOT NULL, \`deductionRules\` json NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`addresses\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userId\` varchar(255) NOT NULL, \`addressLine1\` varchar(255) NOT NULL, \`addressLine2\` varchar(255) NULL, \`city\` varchar(255) NOT NULL, \`state\` varchar(255) NOT NULL, \`postalCode\` varchar(255) NOT NULL, \`country\` varchar(255) NOT NULL DEFAULT 'Kenya', \`isDefault\` tinyint NOT NULL DEFAULT 0, \`type\` enum ('SHIPPING', 'BILLING', 'BOTH') NOT NULL DEFAULT 'BOTH', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`refresh_tokens\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userId\` varchar(255) NOT NULL, \`token\` varchar(255) NOT NULL, \`expires\` datetime NOT NULL, \`revoked\` tinyint NOT NULL DEFAULT 0, \`revokedAt\` datetime NULL, \`replacedByToken\` varchar(255) NULL, \`userAgent\` varchar(255) NULL, \`ipAddress\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payment_methods\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userId\` varchar(255) NOT NULL, \`type\` enum ('CREDIT_CARD', 'DEBIT_CARD', 'MPESA', 'BANK_TRANSFER', 'SALARY_DEDUCTION') NOT NULL, \`provider\` enum ('STRIPE', 'MPESA', 'PAYPAL', 'INTERNAL') NOT NULL, \`details\` json NOT NULL, \`isDefault\` tinyint NOT NULL DEFAULT 0, \`metadata\` json NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`payment_transactions\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`orderId\` varchar(255) NOT NULL, \`paymentMethodId\` varchar(255) NULL, \`amount\` decimal(10,2) NOT NULL, \`currency\` varchar(255) NULL, \`status\` enum ('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'REFUNDED', 'CANCELLED') NOT NULL DEFAULT 'PENDING', \`provider\` enum ('STRIPE', 'MPESA', 'PAYPAL', 'INTERNAL') NOT NULL, \`providerTransactionId\` varchar(255) NULL, \`providerResponse\` json NULL, \`metadata\` json NULL, \`failureReason\` text NULL, \`processedAt\` timestamp NULL, \`refundReference\` varchar(255) NULL, \`mpesaDetails\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order_items\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`orderId\` varchar(255) NOT NULL, \`productId\` varchar(255) NOT NULL, \`quantity\` int NOT NULL, \`unitPrice\` decimal(10,2) NOT NULL, \`total\` decimal(10,2) NOT NULL, \`productSnapshot\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`orders\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userId\` varchar(255) NOT NULL, \`addressId\` varchar(255) NOT NULL, \`subtotal\` decimal(10,2) NOT NULL, \`tax\` decimal(10,2) NOT NULL DEFAULT '0.00', \`shippingFee\` decimal(10,2) NOT NULL DEFAULT '0.00', \`total\` decimal(10,2) NOT NULL, \`status\` enum ('PENDING', 'PROCESSING', 'SHIPPED', 'DELIVERED', 'CANCELLED') NOT NULL DEFAULT 'PENDING', \`paymentMethod\` enum ('CASH', 'SALARY_DEDUCTION') NOT NULL DEFAULT 'CASH', \`paymentStatus\` enum ('PENDING', 'PAID', 'FAILED', 'REFUNDED') NOT NULL DEFAULT 'PENDING', \`installments\` int NULL, \`notes\` text NULL, \`metadata\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`sellers\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, \`email\` varchar(255) NOT NULL, \`phone\` varchar(255) NULL, \`tax_id\` varchar(255) NOT NULL, \`bankDetails\` json NULL, \`isVerified\` tinyint NOT NULL DEFAULT 0, \`isActive\` tinyint NOT NULL DEFAULT 1, \`averageRating\` decimal(2,1) NOT NULL DEFAULT '0.0', \`reviewCount\` int NOT NULL DEFAULT '0', \`logoId\` varchar(36) NULL, \`bannerId\` varchar(36) NULL, UNIQUE INDEX \`IDX_60a049dd3231ed458dccfdaf40\` (\`email\`), UNIQUE INDEX \`IDX_f08f4edbaa82261efb97be4dbe\` (\`tax_id\`), UNIQUE INDEX \`REL_8342d74f1d623fb228245161c1\` (\`logoId\`), UNIQUE INDEX \`REL_e361e6913718f5e021318ca261\` (\`bannerId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`review_metrics\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`reviewId\` varchar(255) NOT NULL, \`metric\` enum ('OVERALL', 'QUALITY', 'VALUE', 'DELIVERY', 'SERVICE') NOT NULL, \`rating\` decimal(2,1) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`review_replies\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`reviewId\` varchar(255) NOT NULL, \`userId\` varchar(255) NOT NULL, \`comment\` text NOT NULL, \`isOfficial\` tinyint NOT NULL DEFAULT 0, \`helpfulCount\` int NOT NULL DEFAULT '0', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`reviews\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userId\` varchar(255) NOT NULL, \`type\` enum ('PRODUCT', 'SELLER') NOT NULL, \`entityId\` varchar(255) NOT NULL, \`orderId\` varchar(255) NULL, \`rating\` decimal(2,1) NOT NULL, \`comment\` text NOT NULL, \`title\` text NULL, \`status\` enum ('PENDING', 'APPROVED', 'REJECTED', 'REPORTED') NOT NULL DEFAULT 'PENDING', \`helpfulCount\` int NOT NULL DEFAULT '0', \`reportCount\` int NOT NULL DEFAULT '0', \`isVerifiedPurchase\` tinyint NOT NULL DEFAULT 0, \`metadata\` json NULL, \`productId\` varchar(36) NULL, \`sellerId\` varchar(36) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`categories\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, \`description\` text NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`products\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, \`description\` text NOT NULL, \`price\` decimal(10,2) NOT NULL, \`stock\` int NOT NULL DEFAULT '0', \`isActive\` tinyint NOT NULL DEFAULT 1, \`sellerId\` varchar(255) NOT NULL, \`categoryId\` varchar(255) NOT NULL, \`averageRating\` decimal(2,1) NOT NULL DEFAULT '0.0', \`reviewCount\` int NOT NULL DEFAULT '0', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`cart_items\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`cartId\` varchar(255) NOT NULL, \`productId\` varchar(255) NOT NULL, \`quantity\` int NOT NULL, \`unitPrice\` decimal(10,2) NOT NULL, \`subtotal\` decimal(10,2) NOT NULL, \`discount\` decimal(10,2) NOT NULL DEFAULT '0.00', \`total\` decimal(10,2) NOT NULL, \`isValid\` tinyint NOT NULL COMMENT 'Indicates if item is available and within company policy limits' DEFAULT 1, \`validationMessages\` json NULL, \`metadata\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`carts\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userId\` varchar(255) NOT NULL, \`status\` enum ('ACTIVE', 'CHECKED_OUT', 'ABANDONED', 'EXPIRED') NOT NULL DEFAULT 'ACTIVE', \`subtotal\` decimal(10,2) NOT NULL DEFAULT '0.00', \`total\` decimal(10,2) NOT NULL DEFAULT '0.00', \`companyDiscount\` decimal(10,2) NOT NULL DEFAULT '0.00', \`isValidated\` tinyint NOT NULL COMMENT 'Indicates if cart items have been validated against company policy' DEFAULT 0, \`lastActivityAt\` timestamp NULL, \`expiresAt\` timestamp NULL, \`metadata\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`notifications\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userId\` varchar(255) NOT NULL, \`type\` enum ('ORDER_STATUS', 'PAYMENT_STATUS', 'SALARY_DEDUCTION', 'SYSTEM', 'PRODUCT', 'ACCOUNT') NOT NULL, \`title\` varchar(255) NOT NULL, \`content\` text NOT NULL, \`channel\` enum ('EMAIL', 'SMS', 'PUSH', 'IN_APP') NOT NULL DEFAULT 'IN_APP', \`isRead\` tinyint NOT NULL DEFAULT 0, \`readAt\` timestamp NULL, \`scheduledFor\` timestamp NULL, \`metadata\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`deduction_schedules\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`salaryDeductionId\` varchar(255) NOT NULL, \`installmentNumber\` int NOT NULL, \`amount\` decimal(10,2) NOT NULL, \`dueDate\` timestamp NOT NULL, \`status\` enum ('PENDING', 'ACTIVE', 'COMPLETED', 'CANCELLED', 'FAILED') NOT NULL DEFAULT 'PENDING', \`paidAt\` timestamp NULL, \`paymentDetails\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`salary_deductions\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`userId\` varchar(255) NOT NULL, \`orderId\` varchar(255) NOT NULL, \`totalAmount\` decimal(10,2) NOT NULL, \`installments\` int NOT NULL, \`installmentAmount\` decimal(10,2) NOT NULL, \`status\` enum ('PENDING', 'ACTIVE', 'COMPLETED', 'CANCELLED', 'FAILED') NOT NULL DEFAULT 'PENDING', \`frequency\` enum ('MONTHLY', 'BI_WEEKLY', 'WEEKLY') NOT NULL DEFAULT 'MONTHLY', \`startDate\` timestamp NOT NULL, \`endDate\` timestamp NOT NULL, \`amountPaid\` decimal(10,2) NOT NULL DEFAULT '0.00', \`metadata\` json NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`users\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`email\` varchar(255) NOT NULL, \`password\` varchar(255) NOT NULL, \`firstName\` varchar(255) NOT NULL, \`lastName\` varchar(255) NOT NULL, \`phone\` varchar(255) NULL, \`role\` enum ('ADMIN', 'EMPLOYEE', 'SELLER') NOT NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, \`refreshToken\` varchar(255) NULL, \`passwordResetToken\` varchar(255) NULL, \`passwordResetExpires\` datetime NULL, \`emailVerificationToken\` varchar(255) NULL, \`emailVerificationExpires\` datetime NULL, \`emailVerified\` tinyint NOT NULL DEFAULT 0, \`lastLoginAt\` timestamp NULL, \`employeeId\` varchar(255) NULL, \`sellerProfile\` json NULL, \`companyId\` varchar(36) NULL, \`avatarId\` varchar(36) NULL, UNIQUE INDEX \`IDX_97672ac88f789774dd47f7c8be\` (\`email\`), UNIQUE INDEX \`REL_3e1f52ec904aed992472f2be14\` (\`avatarId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`companies\` (\`id\` varchar(36) NOT NULL, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, \`registrationNumber\` varchar(255) NOT NULL, \`contactPerson\` varchar(255) NOT NULL, \`contactEmail\` varchar(255) NOT NULL, \`contactPhone\` varchar(255) NOT NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, \`logoId\` varchar(36) NULL, \`bannerId\` varchar(36) NULL, UNIQUE INDEX \`IDX_7bf9bf7b09ca1dca07a942b569\` (\`registrationNumber\`), UNIQUE INDEX \`REL_652da5b265918d45aaba9d3a3a\` (\`logoId\`), UNIQUE INDEX \`REL_75a00cf8763b458da55df2f438\` (\`bannerId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`media_variants\` ADD CONSTRAINT \`FK_c93fce88e484793efb4ad22f03d\` FOREIGN KEY (\`mediaId\`) REFERENCES \`media\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`media_folders\` ADD CONSTRAINT \`FK_7769ceab4efa6da5e11741840e7\` FOREIGN KEY (\`parentId\`) REFERENCES \`media_folders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`media\` ADD CONSTRAINT \`FK_281435a95f96d84dc175a0319de\` FOREIGN KEY (\`folderId\`) REFERENCES \`media_folders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`payroll_settings\` ADD CONSTRAINT \`FK_d577f7623a5d3c8355d2dbb3415\` FOREIGN KEY (\`companyId\`) REFERENCES \`companies\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`addresses\` ADD CONSTRAINT \`FK_95c93a584de49f0b0e13f753630\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`refresh_tokens\` ADD CONSTRAINT \`FK_610102b60fea1455310ccd299de\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`payment_methods\` ADD CONSTRAINT \`FK_580f1dbf7bceb9c2cde8baf7ff4\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`payment_transactions\` ADD CONSTRAINT \`FK_5b3faf4bb5e17cf8fd691bf9512\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`payment_transactions\` ADD CONSTRAINT \`FK_7a4e222b6bf973a8bde28cd697a\` FOREIGN KEY (\`paymentMethodId\`) REFERENCES \`payment_methods\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_items\` ADD CONSTRAINT \`FK_f1d359a55923bb45b057fbdab0d\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_items\` ADD CONSTRAINT \`FK_cdb99c05982d5191ac8465ac010\` FOREIGN KEY (\`productId\`) REFERENCES \`products\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_151b79a83ba240b0cb31b2302d1\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_37636d260931dcf46d11892f614\` FOREIGN KEY (\`addressId\`) REFERENCES \`addresses\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`sellers\` ADD CONSTRAINT \`FK_8342d74f1d623fb228245161c15\` FOREIGN KEY (\`logoId\`) REFERENCES \`media\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`sellers\` ADD CONSTRAINT \`FK_e361e6913718f5e021318ca261b\` FOREIGN KEY (\`bannerId\`) REFERENCES \`media\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`review_metrics\` ADD CONSTRAINT \`FK_1abb5b976761eefcbcc4c626ed8\` FOREIGN KEY (\`reviewId\`) REFERENCES \`reviews\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`review_replies\` ADD CONSTRAINT \`FK_385273ae9fd7dc7313e9933cf57\` FOREIGN KEY (\`reviewId\`) REFERENCES \`reviews\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`review_replies\` ADD CONSTRAINT \`FK_37e9e13a85e6a9ac6fcf778ee6b\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`reviews\` ADD CONSTRAINT \`FK_7ed5659e7139fc8bc039198cc1f\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`reviews\` ADD CONSTRAINT \`FK_a6b3c434392f5d10ec171043666\` FOREIGN KEY (\`productId\`) REFERENCES \`products\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`reviews\` ADD CONSTRAINT \`FK_9805ee71aa117dee3c3f60f5271\` FOREIGN KEY (\`sellerId\`) REFERENCES \`sellers\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`reviews\` ADD CONSTRAINT \`FK_53a68dc905777554b7f702791fa\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`products\` ADD CONSTRAINT \`FK_ff56834e735fa78a15d0cf21926\` FOREIGN KEY (\`categoryId\`) REFERENCES \`categories\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`products\` ADD CONSTRAINT \`FK_e40a1dd2909378f0da1f34f7bd6\` FOREIGN KEY (\`sellerId\`) REFERENCES \`sellers\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`cart_items\` ADD CONSTRAINT \`FK_edd714311619a5ad09525045838\` FOREIGN KEY (\`cartId\`) REFERENCES \`carts\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`cart_items\` ADD CONSTRAINT \`FK_72679d98b31c737937b8932ebe6\` FOREIGN KEY (\`productId\`) REFERENCES \`products\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`carts\` ADD CONSTRAINT \`FK_69828a178f152f157dcf2f70a89\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notifications\` ADD CONSTRAINT \`FK_692a909ee0fa9383e7859f9b406\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`deduction_schedules\` ADD CONSTRAINT \`FK_a639077fa4e9550b46508053648\` FOREIGN KEY (\`salaryDeductionId\`) REFERENCES \`salary_deductions\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`salary_deductions\` ADD CONSTRAINT \`FK_f423dfdbb9efa03895c1604b675\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`salary_deductions\` ADD CONSTRAINT \`FK_daf399f5d051591ac651b42e155\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_6f9395c9037632a31107c8a9e58\` FOREIGN KEY (\`companyId\`) REFERENCES \`companies\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_3e1f52ec904aed992472f2be147\` FOREIGN KEY (\`avatarId\`) REFERENCES \`media\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`companies\` ADD CONSTRAINT \`FK_652da5b265918d45aaba9d3a3a1\` FOREIGN KEY (\`logoId\`) REFERENCES \`media\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`companies\` ADD CONSTRAINT \`FK_75a00cf8763b458da55df2f438f\` FOREIGN KEY (\`bannerId\`) REFERENCES \`media\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`companies\` DROP FOREIGN KEY \`FK_75a00cf8763b458da55df2f438f\``);
        await queryRunner.query(`ALTER TABLE \`companies\` DROP FOREIGN KEY \`FK_652da5b265918d45aaba9d3a3a1\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_3e1f52ec904aed992472f2be147\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_6f9395c9037632a31107c8a9e58\``);
        await queryRunner.query(`ALTER TABLE \`salary_deductions\` DROP FOREIGN KEY \`FK_daf399f5d051591ac651b42e155\``);
        await queryRunner.query(`ALTER TABLE \`salary_deductions\` DROP FOREIGN KEY \`FK_f423dfdbb9efa03895c1604b675\``);
        await queryRunner.query(`ALTER TABLE \`deduction_schedules\` DROP FOREIGN KEY \`FK_a639077fa4e9550b46508053648\``);
        await queryRunner.query(`ALTER TABLE \`notifications\` DROP FOREIGN KEY \`FK_692a909ee0fa9383e7859f9b406\``);
        await queryRunner.query(`ALTER TABLE \`carts\` DROP FOREIGN KEY \`FK_69828a178f152f157dcf2f70a89\``);
        await queryRunner.query(`ALTER TABLE \`cart_items\` DROP FOREIGN KEY \`FK_72679d98b31c737937b8932ebe6\``);
        await queryRunner.query(`ALTER TABLE \`cart_items\` DROP FOREIGN KEY \`FK_edd714311619a5ad09525045838\``);
        await queryRunner.query(`ALTER TABLE \`products\` DROP FOREIGN KEY \`FK_e40a1dd2909378f0da1f34f7bd6\``);
        await queryRunner.query(`ALTER TABLE \`products\` DROP FOREIGN KEY \`FK_ff56834e735fa78a15d0cf21926\``);
        await queryRunner.query(`ALTER TABLE \`reviews\` DROP FOREIGN KEY \`FK_53a68dc905777554b7f702791fa\``);
        await queryRunner.query(`ALTER TABLE \`reviews\` DROP FOREIGN KEY \`FK_9805ee71aa117dee3c3f60f5271\``);
        await queryRunner.query(`ALTER TABLE \`reviews\` DROP FOREIGN KEY \`FK_a6b3c434392f5d10ec171043666\``);
        await queryRunner.query(`ALTER TABLE \`reviews\` DROP FOREIGN KEY \`FK_7ed5659e7139fc8bc039198cc1f\``);
        await queryRunner.query(`ALTER TABLE \`review_replies\` DROP FOREIGN KEY \`FK_37e9e13a85e6a9ac6fcf778ee6b\``);
        await queryRunner.query(`ALTER TABLE \`review_replies\` DROP FOREIGN KEY \`FK_385273ae9fd7dc7313e9933cf57\``);
        await queryRunner.query(`ALTER TABLE \`review_metrics\` DROP FOREIGN KEY \`FK_1abb5b976761eefcbcc4c626ed8\``);
        await queryRunner.query(`ALTER TABLE \`sellers\` DROP FOREIGN KEY \`FK_e361e6913718f5e021318ca261b\``);
        await queryRunner.query(`ALTER TABLE \`sellers\` DROP FOREIGN KEY \`FK_8342d74f1d623fb228245161c15\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_37636d260931dcf46d11892f614\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_151b79a83ba240b0cb31b2302d1\``);
        await queryRunner.query(`ALTER TABLE \`order_items\` DROP FOREIGN KEY \`FK_cdb99c05982d5191ac8465ac010\``);
        await queryRunner.query(`ALTER TABLE \`order_items\` DROP FOREIGN KEY \`FK_f1d359a55923bb45b057fbdab0d\``);
        await queryRunner.query(`ALTER TABLE \`payment_transactions\` DROP FOREIGN KEY \`FK_7a4e222b6bf973a8bde28cd697a\``);
        await queryRunner.query(`ALTER TABLE \`payment_transactions\` DROP FOREIGN KEY \`FK_5b3faf4bb5e17cf8fd691bf9512\``);
        await queryRunner.query(`ALTER TABLE \`payment_methods\` DROP FOREIGN KEY \`FK_580f1dbf7bceb9c2cde8baf7ff4\``);
        await queryRunner.query(`ALTER TABLE \`refresh_tokens\` DROP FOREIGN KEY \`FK_610102b60fea1455310ccd299de\``);
        await queryRunner.query(`ALTER TABLE \`addresses\` DROP FOREIGN KEY \`FK_95c93a584de49f0b0e13f753630\``);
        await queryRunner.query(`ALTER TABLE \`payroll_settings\` DROP FOREIGN KEY \`FK_d577f7623a5d3c8355d2dbb3415\``);
        await queryRunner.query(`ALTER TABLE \`media\` DROP FOREIGN KEY \`FK_281435a95f96d84dc175a0319de\``);
        await queryRunner.query(`ALTER TABLE \`media_folders\` DROP FOREIGN KEY \`FK_7769ceab4efa6da5e11741840e7\``);
        await queryRunner.query(`ALTER TABLE \`media_variants\` DROP FOREIGN KEY \`FK_c93fce88e484793efb4ad22f03d\``);
        await queryRunner.query(`DROP INDEX \`REL_75a00cf8763b458da55df2f438\` ON \`companies\``);
        await queryRunner.query(`DROP INDEX \`REL_652da5b265918d45aaba9d3a3a\` ON \`companies\``);
        await queryRunner.query(`DROP INDEX \`IDX_7bf9bf7b09ca1dca07a942b569\` ON \`companies\``);
        await queryRunner.query(`DROP TABLE \`companies\``);
        await queryRunner.query(`DROP INDEX \`REL_3e1f52ec904aed992472f2be14\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_97672ac88f789774dd47f7c8be\` ON \`users\``);
        await queryRunner.query(`DROP TABLE \`users\``);
        await queryRunner.query(`DROP TABLE \`salary_deductions\``);
        await queryRunner.query(`DROP TABLE \`deduction_schedules\``);
        await queryRunner.query(`DROP TABLE \`notifications\``);
        await queryRunner.query(`DROP TABLE \`carts\``);
        await queryRunner.query(`DROP TABLE \`cart_items\``);
        await queryRunner.query(`DROP TABLE \`products\``);
        await queryRunner.query(`DROP TABLE \`categories\``);
        await queryRunner.query(`DROP TABLE \`reviews\``);
        await queryRunner.query(`DROP TABLE \`review_replies\``);
        await queryRunner.query(`DROP TABLE \`review_metrics\``);
        await queryRunner.query(`DROP INDEX \`REL_e361e6913718f5e021318ca261\` ON \`sellers\``);
        await queryRunner.query(`DROP INDEX \`REL_8342d74f1d623fb228245161c1\` ON \`sellers\``);
        await queryRunner.query(`DROP INDEX \`IDX_f08f4edbaa82261efb97be4dbe\` ON \`sellers\``);
        await queryRunner.query(`DROP INDEX \`IDX_60a049dd3231ed458dccfdaf40\` ON \`sellers\``);
        await queryRunner.query(`DROP TABLE \`sellers\``);
        await queryRunner.query(`DROP TABLE \`orders\``);
        await queryRunner.query(`DROP TABLE \`order_items\``);
        await queryRunner.query(`DROP TABLE \`payment_transactions\``);
        await queryRunner.query(`DROP TABLE \`payment_methods\``);
        await queryRunner.query(`DROP TABLE \`refresh_tokens\``);
        await queryRunner.query(`DROP TABLE \`addresses\``);
        await queryRunner.query(`DROP TABLE \`payroll_settings\``);
        await queryRunner.query(`DROP TABLE \`media\``);
        await queryRunner.query(`DROP TABLE \`media_folders\``);
        await queryRunner.query(`DROP TABLE \`media_variants\``);
    }

}
